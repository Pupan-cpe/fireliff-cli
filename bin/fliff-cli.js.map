{"version":3,"sources":["../lib/fliff-cli.js"],"names":["commandLineArgs","require","commandLineUsage","operation","_unknown","name","defaultOption","stopAtFirstUnknown","argv","options","type","String","Boolean","alias","fliff","FLIFF","help","console","log","addUsage","updateUsage","deleteUsage","getUsage","tokenUsage","initUsage","configUsage","fliffUsage","process","exit","indexOf","then","verbose","add","rsAdd","input","info","catch","errAdd","message","error","delete","rsDelete","id","errDelete","get","rsGet","Array","isArray","table","errGet","update","rsUpdate","errUpdate","issue","revoke","undefined","token","rsToken","accessToken","JSON","stringify","save","warn","errToken","initPath","path","resolve","cwd","init","rsInit","files","forEach","dest","installNow","errInit","pjson","version","config","rsConfig","errConfig"],"mappings":"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","sourcesContent":["#!/usr/bin/env node\nimport 'console.table';\nimport * as path from 'path';\nimport pjson from '../package.json';\nimport './colors-set-theme';\nimport { FLIFF } from './fliff.js';\nimport { getValidatedConfig } from './shared';\nimport fliffUsage, { addUsage, updateUsage, getUsage, deleteUsage, initUsage, configUsage, tokenUsage } from './fliff-cli-usage';\n\nconst commandLineArgs = require('command-line-args');\nconst commandLineUsage = require('command-line-usage');\n\nconst { operation, _unknown } = commandLineArgs([\n    { name: 'operation', defaultOption: true }\n], { stopAtFirstUnknown: true });\nconst argv = _unknown || [];\nconst options = commandLineArgs([\n    { name: 'ble', type: String },\n    { name: 'description', type: String },\n    { name: 'id', type: String },\n    { name: 'issue', type: Boolean },\n    { name: 'name', type: String },\n    { name: 'revoke', type: String },\n    { name: 'save', type: Boolean },\n    { name: 'secret', type: String },\n    { name: 'type', type: String },\n    { name: 'url', type: String },\n    { name: 'version', alias: 'v', type: Boolean },\n    { name: 'detail', type: Boolean },\n    { name: 'help', type: Boolean }\n], { argv });\nconst fliff = new FLIFF();\n\n\nif (options.help) {\n    switch (operation) {\n        case 'add': console.log(commandLineUsage(addUsage)); break;\n        case 'update': console.log(commandLineUsage(updateUsage)); break;\n        case 'delete': console.log(commandLineUsage(deleteUsage)); break;\n        case 'get': console.log(commandLineUsage(getUsage)); break;\n        case 'token': console.log(commandLineUsage(tokenUsage)); break;\n        case 'init': console.log(commandLineUsage(initUsage)); break;\n        case 'config': console.log(commandLineUsage(configUsage)); break;\n        default: console.log(commandLineUsage(fliffUsage));\n    }\n    process.exit(0);\n}\n\n// Commands that need Functions config\nif (['add', 'update', 'delete', 'get', 'token'].indexOf(operation) > -1) {\n    getValidatedConfig().then(() => {\n        switch (operation) {\n            case 'add':\n                console.log('Sending request to add LIFF view...'.verbose);\n                fliff.add(options)\n                    .then(rsAdd => {\n                        console.log(`Created ${options.name.input} view with LIFF ID: ${rsAdd.info}`.verbose);\n                        return rsAdd;\n                    })\n                    .catch(errAdd => {\n                        const message = errAdd.message || errAdd;\n                        console.log(message.error);\n                        process.exit(1);\n                    });\n\n                break;\n\n            case 'delete':\n                console.log(`Sending request to delete LIFF view(s)...`.verbose);\n                fliff.delete(options)\n                    .then(rsDelete => {\n                        console.log(`Deleted view with LIFF ID: ${options.id.input}`.verbose);\n                        console.log(`Unset view(s) in Functions configuration`.info, rsDelete);\n                        return rsDelete;\n                    })\n                    .catch(errDelete => {\n                        const message = errDelete.message || errDelete;\n                        console.log(message.error);\n                        process.exit(1);\n                    });\n                break;\n\n            case 'get':\n                console.log('Sending request to get LIFF view(s)...'.verbose);\n                fliff.get(options)\n                    .then(rsGet => {\n                        if (Array.isArray(rsGet)) {\n                            console.table(rsGet);\n                        } else {\n                            console.log(rsGet);\n                        }\n                        return rsGet;\n                    })\n                    .catch(errGet => {\n                        const message = errGet.message || errGet;\n                        console.log(message.error);\n                        process.exit(1);\n                    });\n\n                break;\n\n            case 'update':\n                console.log(`Sending request to update LIFF view`.verbose);\n                fliff.update(options)\n                    .then(rsUpdate => {\n                        console.log(`Updated LIFF ID: ${options.id.input}`.info);\n\n                        return rsUpdate;\n                    })\n                    .catch(errUpdate => {\n                        const message = errUpdate.message || errUpdate;\n                        console.log(message.error);\n                        process.exit(1);\n                    });\n                break;\n\n            case 'token':\n                if (options.issue === true) {\n                    console.log('Issuing channel access token'.verbose);\n                } else if (options.revoke !== undefined) {\n                    console.log('Revoking channel access token'.verbose);\n                }\n\n                fliff.token(options)\n                    .then(rsToken => {\n                        if (options.issue === true && rsToken.accessToken) {\n                            console.log(`The following token has been issued.`.info);\n                            console.log(JSON.stringify(rsToken, undefined, 2));\n\n                            if (options.save === true) {\n                                console.log(`The access token is saved on Firebase Functions Configuration.`.info);\n                            } else {\n                                console.log(`This access token is NOT saved on Firebase Functions Configuration.`.warn);\n                                console.log(`If you would like to saved on Firebase Functions Configuration. Try re-run using ${'fliff token --issue --save'.input} `.help);\n                            }\n                        } else if (options.revoke !== undefined && rsToken === true) {\n                            console.log(`The token is revoked.`.info);\n                        } else {\n                            console.log('Unknown response').warn;\n                        }\n\n                        return rsToken;\n                    })\n                    .catch(errToken => {\n                        const message = errToken.message || errToken;\n                        console.log(message.error);\n                        process.exit(1);\n                    });\n\n                break;\n\n            default:\n\n        }\n\n    });\n} else if (operation) {\n    const initPath = path.resolve(process.cwd(), 'web-views');\n\n    switch (operation) {\n        case 'init':\n            fliff.init(initPath)\n                .then(rsInit => {\n                    console.log('Generated files'.info);\n                    rsInit.files.forEach(dest => console.log(dest.info));\n                    if (rsInit.message) {\n                        console.log(rsInit.message);\n                    }\n                    return true;\n                })\n                .then(() => fliff.installNow(initPath))\n                .catch(errInit => {\n                    const message = errInit.message || errInit;\n                    console.log(message.error);\n                    process.exit(1);\n                });\n            break;\n        case 'version':\n            console.log(`Version: ${pjson.version}`);\n            break;\n        case 'config':\n            console.log(`Configuring Firebase Functions`.verbose);\n            fliff.config(options)\n                .then(rsConfig => {\n                    console.log(`The following property has been updated.`.info);\n                    console.log(JSON.stringify(rsConfig, undefined, 2));\n                    console.log(`Firebase Functions configured`.info);\n\n                    return rsConfig;\n                })\n                .catch(errConfig => {\n                    const message = errConfig.message || errConfig;\n                    console.log(message.error);\n                    process.exit(1);\n                });\n            break;\n        case 'help':\n        default:\n            console.log(commandLineUsage(fliffUsage));\n    }\n} else if (options.version) {\n    console.log(`Version: ${pjson.version}`);\n} else {\n    console.log(commandLineUsage(fliffUsage));\n}\n"],"file":"fliff-cli.js"}