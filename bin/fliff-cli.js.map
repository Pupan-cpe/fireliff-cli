{"version":3,"sources":["../lib/fliff-cli.js"],"names":["commandLineArgs","require","operation","_unknown","name","defaultOption","stopAtFirstUnknown","argv","options","type","String","Boolean","alias","fliff","FLIFF","indexOf","then","config","accessToken","line","access_token","viewNames","data","req","res","LIFFAddRequest","view","url","console","log","verbose","send","error","process","exit","input","liffId","info","LIFFConfig","setView","help","code","delete","rsDelete","id","catch","errDelete","message","get","rsGet","table","errGet","update","rsUpdate","errUpdate","issue","revoke","undefined","token","rsToken","JSON","stringify","save","warn","errToken","init","path","resolve","cwd","pjson","version","rsConfig","errConfig"],"mappings":"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","sourcesContent":["#!/usr/bin/env node\nimport 'console.table';\nimport * as path from 'path';\nimport pjson from '../package.json';\nimport { LIFFAddRequest, LIFFConfig } from '.';\nimport './colors-set-theme';\nimport { FLIFF } from './fliff.js';\nimport { getValidatedConfig } from './shared';\n\nconst commandLineArgs = require('command-line-args');\nconst { operation, _unknown } = commandLineArgs([\n    { name: 'operation', defaultOption: true }\n], { stopAtFirstUnknown: true });\nconst argv = _unknown || [];\nconst options = commandLineArgs([\n    { name: 'ble', type: String },\n    { name: 'description', type: String },\n    { name: 'id', type: String },\n    { name: 'issue', type: Boolean },\n    { name: 'name', type: String },\n    { name: 'revoke', type: String },\n    { name: 'save', type: Boolean },\n    { name: 'secret', type: String },\n    { name: 'type', type: String },\n    { name: 'url', type: String },\n    { name: 'version', alias: 'v', type: Boolean }\n], { argv });\nconst fliff = new FLIFF();\n\n// Commands that need Functions config\nif (['add', 'update', 'delete', 'get', 'token'].indexOf(operation) > -1) {\n    getValidatedConfig().then(async (config) => {\n        const accessToken = config.line.access_token;\n        let viewNames;\n        let data;\n        let req;\n        let res;\n\n        switch (operation) {\n            case 'add':\n                req = new LIFFAddRequest({ accessToken });\n                data = {\n                    view: {\n                        type: options.type,\n                        url: options.url\n                    }\n                };\n                try {\n                    console.log('Sending request to add LIFF view...'.verbose);\n                    res = await req.send(data);\n                } catch (error) {\n                    console.log(`Failed to add LIFF view`.error);\n                    console.error(error);\n                    process.exit(1);\n                }\n\n                try {\n                    console.log(`Created ${options.name.input} view with LIFF ID: ${res.data.liffId.info}`.verbose);\n                    await LIFFConfig.setView(options.name, res.data.liffId);\n                } catch (error) {\n                    console.log(`Failed to set Functions configuration`.error);\n                    console.log(`Try re-run with the following command`.help);\n                    console.log(`firebase functions:config:set views.${options.name}=${res.data.liffId}`.code);\n                    console.error(error);\n                    process.exit(1);\n                }\n\n                break;\n\n            case 'delete':\n                console.log(`Sending request to delete LIFF view(s)...`.verbose);\n                fliff.delete(options)\n                    .then(rsDelete => {\n                        console.log(`Deleted view with LIFF ID: ${options.id.input}`.verbose);\n                        console.log(`Unset view(s) in Functions configuration`.info, rsDelete);\n                        return rsDelete;\n                    })\n                    .catch(errDelete => {\n                        const message = errDelete.message || errDelete;\n                        console.log(message.error);\n                        process.exit(1);\n                    });\n                break;\n\n            case 'get':\n                console.log('Sending request to get LIFF view(s)...'.verbose);\n                fliff.get(options)\n                    .then(rsGet => {\n                        if (typeof rsGet === 'string') {\n                            console.log(rsGet);\n                        } else {\n                            console.table(rsGet);\n                        }\n                        return rsGet;\n                    })\n                    .catch(errGet => {\n                        const message = errGet.message || errGet;\n                        console.log(message.error);\n                        process.exit(1);\n                    });\n\n                break;\n\n            case 'update':\n                console.log(`Sending request to update LIFF view`.verbose);\n                fliff.update(options)\n                    .then(rsUpdate => {\n                        console.log(`Updated LIFF ID: ${options.id.input}`.info);\n\n                        return rsUpdate;\n                    })\n                    .catch(errUpdate => {\n                        const message = errUpdate.message || errUpdate;\n                        console.log(message.error);\n                        process.exit(1);\n                    });\n                break;\n\n            case 'token':\n                if (options.issue === true) {\n                    console.log('Issuing channel access token'.verbose);\n                } else if (options.revoke !== undefined) {\n                    console.log('Revoking channel access token'.verbose);\n                }\n\n                fliff.token(options)\n                    .then(rsToken => {\n                        if (options.issue === true && rsToken.accessToken) {\n                            console.log(`The following token has been issued.`.info);\n                            console.log(JSON.stringify(rsToken, undefined, 2));\n\n                            if (options.save === true) {\n                                console.log(`The access token is saved on Firebase Functions Configuration.`.info);\n                            } else {\n                                console.log(`This access token is NOT saved on Firebase Functions Configuration.`.warn);\n                                console.log(`If you would like to saved on Firebase Functions Configuration. Try re-run using ${'fliff token --issue --save'.input} `.help);\n                            }\n                        } else if (options.revoke !== undefined && rsToken === true) {\n                            console.log(`The token is revoked.`.info);\n                        } else {\n                            console.log('Unknown response').warn;\n                        }\n\n                        return rsToken;\n                    })\n                    .catch(errToken => {\n                        const message = errToken.message || errToken;\n                        console.log(message.error);\n                        process.exit(1);\n                    });\n\n                break;\n\n            default:\n\n        }\n\n    });\n} else if (operation) {\n    switch (operation) {\n        case 'init':\n            FLIFF.init(path.resolve(process.cwd(), 'web-views'));\n            break;\n        case 'version':\n            console.log(`Version: ${pjson.version}`);\n            break;\n        case 'config':\n            console.log(`Configuring Firebase Functions`.verbose);\n            fliff.config(options)\n                .then(rsConfig => {\n                    console.log(`The following property has been updated.`.info);\n                    console.log(JSON.stringify(rsConfig, undefined, 2));\n                    console.log(`Firebase Functions configured`.info);\n\n                    return rsConfig;\n                })\n                .catch(errConfig => {\n                    const message = errConfig.message || errConfig;\n                    console.log(message.error);\n                    process.exit(1);\n                });\n            break;\n        case 'help':\n        default:\n        // TODO: Display help message\n    }\n} else if (options.version) {\n    console.log(`Version: ${pjson.version}`);\n}\n"],"file":"fliff-cli.js"}