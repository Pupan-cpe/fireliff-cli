{"version":3,"sources":["../lib/liff-config.js"],"names":["LIFFConfig","setView","name","id","FunctionsConfig","set","unsetView","unset","setRichMenu","unsetRichMenu","getViewNamesById","config","viewNames","views","viewName","push","getViewNameById","names","length","getViewIdByName"],"mappings":";;;;;;;AAAA;;AAEO,MAAMA,UAAN,CAAiB;AACpB,SAAOC,OAAP,CAAeC,IAAf,EAAqBC,EAArB,EAAyB;AACrB,WAAOC,iCAAgBC,GAAhB,CAAqB,SAAQH,IAAK,EAAlC,EAAqCC,EAArC,CAAP;AACH;;AAED,SAAOG,SAAP,CAAiBJ,IAAjB,EAAuB;AACnB,WAAOE,iCAAgBG,KAAhB,CAAuB,SAAQL,IAAK,EAApC,CAAP;AACH;;AAED,SAAOM,WAAP,CAAmBN,IAAnB,EAAyBC,EAAzB,EAA6B;AACzB,WAAOC,iCAAgBC,GAAhB,CAAqB,aAAYH,IAAK,EAAtC,EAAyCC,EAAzC,CAAP;AACH;;AAED,SAAOM,aAAP,CAAqBN,EAArB,EAAyB;AACrB,WAAOC,iCAAgBG,KAAhB,CAAsB,WAAtB,EAAmCJ,EAAnC,CAAP;AACH;;AAED,SAAOO,gBAAP,CAAwBP,EAAxB,EAA4BQ,MAA5B,EAAoC;AAChC,UAAMC,SAAS,GAAG,EAAlB;;AACA,QAAID,MAAM,IAAIA,MAAM,CAACE,KAArB,EAA4B;AACxB,WAAK,IAAIC,QAAT,IAAqBH,MAAM,CAACE,KAA5B,EAAmC;AAC/B,YAAIF,MAAM,CAACE,KAAP,CAAaC,QAAb,MAA2BX,EAA/B,EAAmC;AAC/BS,UAAAA,SAAS,CAACG,IAAV,CAAeD,QAAf;AACH;AACJ;AACJ;;AACD,WAAOF,SAAP;AACH;;AACD,SAAOI,eAAP,CAAuBb,EAAvB,EAA2BQ,MAA3B,EAAmC;AAC/B,QAAIM,KAAK,GAAG,KAAKP,gBAAL,CAAsBP,EAAtB,EAA0BQ,MAA1B,CAAZ;AACA,WAAQM,KAAK,CAACC,MAAN,GAAe,CAAhB,GAAqBD,KAAK,CAAC,CAAD,CAA1B,GAAgC,IAAvC;AACH;;AAED,SAAOE,eAAP,CAAuBjB,IAAvB,EAA6BS,MAA7B,EAAqC;AACjC,QAAIA,MAAM,IAAIA,MAAM,CAACE,KAArB,EAA4B;AACxB,WAAK,IAAIC,QAAT,IAAqBH,MAAM,CAACE,KAA5B,EAAmC;AAC/B,YAAIC,QAAQ,KAAKZ,IAAjB,EAAuB;AACnB,iBAAOS,MAAM,CAACE,KAAP,CAAaC,QAAb,CAAP;AACH;AACJ;AACJ;;AACD,WAAO,IAAP;AACH;;AA1CmB","sourcesContent":["import { FunctionsConfig } from './functions-config';\n\nexport class LIFFConfig {\n    static setView(name, id) {\n        return FunctionsConfig.set(`views.${name}`, id);\n    }\n    \n    static unsetView(name) {\n        return FunctionsConfig.unset(`views.${name}`);\n    }\n    \n    static setRichMenu(name, id) {\n        return FunctionsConfig.set(`richmenus.${name}`, id);\n    }\n    \n    static unsetRichMenu(id) {\n        return FunctionsConfig.unset('richmenus', id);\n    }\n\n    static getViewNamesById(id, config) {\n        const viewNames = [];\n        if (config && config.views) {\n            for (let viewName in config.views) {\n                if (config.views[viewName] === id) {\n                    viewNames.push(viewName);\n                }\n            }\n        }\n        return viewNames;\n    }\n    static getViewNameById(id, config) {\n        let names = this.getViewNamesById(id, config);\n        return (names.length > 0) ? names[0] : null;\n    }\n\n    static getViewIdByName(name, config) {\n        if (config && config.views) {\n            for (let viewName in config.views) {\n                if (viewName === name) {\n                    return config.views[viewName];\n                }\n            }\n        }\n        return null;\n    }\n}\n"],"file":"liff-config.js"}